
buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.github.kt3k.coveralls'
apply from: "gradle/jacoco.gradle"
apply from: "gradle/checkstyle.gradle"
apply from: "gradle/pmd.gradle"
apply from: "gradle/bintray-publish.gradle"

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext {
    jerseyVersion = '2.10.4'
    springRestdocsVersion = '1.1.2.RELEASE'
    javadocLinks = [
		'http://docs.oracle.com/javase/8/docs/api/',
		"http://docs.spring.io/spring-restdocs/docs/$springRestdocsVersion/api/"
    ] as String[]
}

repositories {
    mavenCentral()
}

compileJava {
    options.compilerArgs = ['-Xlint:deprecation', '-Xlint:deprecation', '-Xlint:unchecked']
}

dependencies {

    compile "org.glassfish.jersey.core:jersey-client:$jerseyVersion"
    compile "org.glassfish.jersey.media:jersey-media-multipart:$jerseyVersion"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    
    compile 'commons-io:commons-io:2.4'
    compile("org.springframework.restdocs:spring-restdocs-core:$springRestdocsVersion") {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }
    
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.powermock:powermock-core:1.6.3'
    testCompile 'org.powermock:powermock-api-mockito:1.6.3'
    testCompile 'org.powermock:powermock-module-junit4:1.6.3'
    testCompile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:$jerseyVersion"
    testCompile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-inmemory:$jerseyVersion"
}

test {
    testLogging {
        exceptionFormat "full"
        showStandardStreams = true
    }
}

javadoc {
    options.author = true
    options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
    options.links = javadocLinks
    options.header = "RESTDocsEXT Jersey $version"
    options.docTitle = "${options.header} API"
}
